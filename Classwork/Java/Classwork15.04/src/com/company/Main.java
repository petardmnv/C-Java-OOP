package com.company;

public class Main {

    public static void main(String[] args) {
	// write your code here
    }
}
/*Да се напише програма за електронен магазин.
Да се използват основно(само) map и set
Всеки електронен магазин има артикули и наличност от тях.
Електронния магазин се намира в определена държава(enum) и има списък от държави до които доставя.

Всеки артикул се характеризира с ID, име, цена, мерна единица (enum).

За да пазаруваш в електронния магазин може да си регистриран потребител или гост.
Всеки потребител се характеризира с ID, 2 имена и адрес за доставка.
Адреса за доставка се състои от Държава (enum), Град, Улица + номер и номер на апартамент.

Магазина има кошница с артикули.

Магазина трябва и да пази списък с поръчки.
Поръчките се характеризират с ID, ID на потребителя за който е поръчката, КОПИЕ на адреса за доставка,
статус (enum: Open, Shipped, Completed, Failed) и списък с поръчаните артикули, количества и цена към момента на поръчката.

Магазина има 1 активна кошница и 1 активен потребител.

Магазина трябва да има следните методи:

registerCustomer(Customer) - Customer обекта съдържа цялата информация с изключение на ID-то. Ако някое поле е празно, да се хвърли грешка с липсващото поле.
Метода трябва да генерира произволно ID и да добави новия клиент към списъка с клиенти.

addItem(Item, amount) - Item обекта съдържа цялата информация с изключение на ID-то. Ако някое поле е празно, да се хвърли грешка с липсващото поле.
Метода трябва да генерира произволно ID и да добави новия артикул към списъка с артикули с посочената наличност.
Ако бъде подаден Item обект с попълнено ID, то тогава количеството на посочения артикул трябва да се увеличи.

removeItem(Item, amount) - от наличностите трябва да бъде извадено посоченото количество. Ако искаме да извадим по-голямо количество от наличното -> грешка.
Ако item-a не съществува -> грешка.

addItemToCart(ID, amount) - добавя артикула към активната кошница с определеното количество.

checkoutCart() - ако в активната кошница е празна -> грешка.
Проверява дали добавените количества са налични, ако не -> грешка
Ако са налични създава поръчка в статус Open и активния потребител.
Ако активния потребител няма попълнена информация, то трябва да се създаде гост с произволно ID

shipOrder(ID) - променя статус на поръчката на Shipped. Ако не е намерено такова ID -> грешка
Ако страната до която трябва да бъде доставена поръчката не е в списъка на държави до които доставя магазина -> грешка и сменяме статус на поръчката на Failed

completeOrder(ID) - променя статус на поръчката на Completed. Ако не е намерено такова ID -> грешка

failOrder(ID) - променя статус на поръчката на Failed. Ако не е намерено такова ID -> грешка

Да се напишат UNIT тестове. */
